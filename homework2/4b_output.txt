Unit Test 1

Encryption password: cs6490hw
Plaintext input: INeedAnA
	Convert to an int array: ['0x49', '0x4e', '0x65', '0x65', '0x64', '0x41', '0x6e', '0x41']
	XOR: ['0x2a', '0x3d', '0x53', '0x51', '0x5d', '0x71', '0x6', '0x36']
	Substitution: ['0x79', '0x93', '0x6d', '0x51', '0x20', '0x6b', '0xa8', '0x81']
	Convert to a 64-bit integer: 0x79936d51206ba881
	Permutation round 1: 0xf326daa240d75102
	Permutation round 2: 0xe64db54481aea205
	Permutation round 3: 0xcc9b6a89035d440b
	Permutation round 4: 0x9936d51206ba8817
	Permutation round 5: 0x326daa240d75102f
	Permutation round 6: 0x64db54481aea205e
	Permutation round 7: 0xc9b6a89035d440bc
	Permutation round 8: 0x936d51206ba88179
	Permutation round 9: 0x26daa240d75102f3
	Permutation round 10: 0x4db54481aea205e6
	Permutation round 11: 0x9b6a89035d440bcc
	Permutation round 12: 0x36d51206ba881799
	Permutation round 13: 0x6daa240d75102f32
	Permutation round 14: 0xdb54481aea205e64
	Permutation round 15: 0xb6a89035d440bcc9
	Permutation round 16: 0x6d51206ba8817993
	Convert back to an int array: ['0x6d', '0x51', '0x20', '0x6b', '0xa8', '0x81', '0x79', '0x93']
Ciphertext output: mQ k¨y

Decryption password: cs6490hw
Ciphertext input: mQ k¨y
	Convert to an int array: ['0x6d', '0x51', '0x20', '0x6b', '0xa8', '0x81', '0x79', '0x93']
	Convert to a 64-bit integer: 0x6d51206ba8817993
	Permutation round 1: 0xb6a89035d440bcc9
	Permutation round 2: 0xdb54481aea205e64
	Permutation round 3: 0x6daa240d75102f32
	Permutation round 4: 0x36d51206ba881799
	Permutation round 5: 0x9b6a89035d440bcc
	Permutation round 6: 0x4db54481aea205e6
	Permutation round 7: 0x26daa240d75102f3
	Permutation round 8: 0x936d51206ba88179
	Permutation round 9: 0xc9b6a89035d440bc
	Permutation round 10: 0x64db54481aea205e
	Permutation round 11: 0x326daa240d75102f
	Permutation round 12: 0x9936d51206ba8817
	Permutation round 13: 0xcc9b6a89035d440b
	Permutation round 14: 0xe64db54481aea205
	Permutation round 15: 0xf326daa240d75102
	Permutation round 16: 0x79936d51206ba881
	Convert back to an int array: ['0x79', '0x93', '0x6d', '0x51', '0x20', '0x6b', '0xa8', '0x81']
	Substitution: ['0x2a', '0x3d', '0x53', '0x51', '0x5d', '0x71', '0x6', '0x36']
	XOR: ['0x49', '0x4e', '0x65', '0x65', '0x64', '0x41', '0x6e', '0x41']
Plaintext output: INeedAnA

Decryption indeed reverses the encryption!

Unit Test 2 (Changing only one bit in the input pattern)

Encryption password: cs6490hw
Plaintext input: INeedAnC
	Convert to an int array: ['0x49', '0x4e', '0x65', '0x65', '0x64', '0x41', '0x6e', '0x43']
	XOR: ['0x2a', '0x3d', '0x53', '0x51', '0x5d', '0x71', '0x6', '0x34']
	Substitution: ['0x79', '0x93', '0x6d', '0x51', '0x20', '0x6b', '0xa8', '0x5b']
	Convert to a 64-bit integer: 0x79936d51206ba85b
	Permutation round 1: 0xf326daa240d750b6
	Permutation round 2: 0xe64db54481aea16d
	Permutation round 3: 0xcc9b6a89035d42db
	Permutation round 4: 0x9936d51206ba85b7
	Permutation round 5: 0x326daa240d750b6f
	Permutation round 6: 0x64db54481aea16de
	Permutation round 7: 0xc9b6a89035d42dbc
	Permutation round 8: 0x936d51206ba85b79
	Permutation round 9: 0x26daa240d750b6f3
	Permutation round 10: 0x4db54481aea16de6
	Permutation round 11: 0x9b6a89035d42dbcc
	Permutation round 12: 0x36d51206ba85b799
	Permutation round 13: 0x6daa240d750b6f32
	Permutation round 14: 0xdb54481aea16de64
	Permutation round 15: 0xb6a89035d42dbcc9
	Permutation round 16: 0x6d51206ba85b7993
	Convert back to an int array: ['0x6d', '0x51', '0x20', '0x6b', '0xa8', '0x5b', '0x79', '0x93']
Ciphertext output: mQ k¨[y

Decryption password: cs6490hw
Ciphertext input: mQ k¨[y
	Convert to an int array: ['0x6d', '0x51', '0x20', '0x6b', '0xa8', '0x5b', '0x79', '0x93']
	Convert to a 64-bit integer: 0x6d51206ba85b7993
	Permutation round 1: 0xb6a89035d42dbcc9
	Permutation round 2: 0xdb54481aea16de64
	Permutation round 3: 0x6daa240d750b6f32
	Permutation round 4: 0x36d51206ba85b799
	Permutation round 5: 0x9b6a89035d42dbcc
	Permutation round 6: 0x4db54481aea16de6
	Permutation round 7: 0x26daa240d750b6f3
	Permutation round 8: 0x936d51206ba85b79
	Permutation round 9: 0xc9b6a89035d42dbc
	Permutation round 10: 0x64db54481aea16de
	Permutation round 11: 0x326daa240d750b6f
	Permutation round 12: 0x9936d51206ba85b7
	Permutation round 13: 0xcc9b6a89035d42db
	Permutation round 14: 0xe64db54481aea16d
	Permutation round 15: 0xf326daa240d750b6
	Permutation round 16: 0x79936d51206ba85b
	Convert back to an int array: ['0x79', '0x93', '0x6d', '0x51', '0x20', '0x6b', '0xa8', '0x5b']
	Substitution: ['0x2a', '0x3d', '0x53', '0x51', '0x5d', '0x71', '0x6', '0x34']
	XOR: ['0x49', '0x4e', '0x65', '0x65', '0x64', '0x41', '0x6e', '0x43']
Plaintext output: INeedAnC

Decryption indeed reverses the encryption!

